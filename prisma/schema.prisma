generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String           @id @default(uuid())
  productName String
  description String?
  price       Decimal          @db.Decimal(10, 2)
  sku         String           @unique
  stock       Int              @default(0)
  brandId     String?
  categoryId  String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  images      ProductImage[]
  brand       Brand?           @relation(fields: [brandId], references: [id])
  category    Category?        @relation(fields: [categoryId], references: [id])
  variants    ProductVariant[]
}

model ProductImage {
  id           String   @id @default(uuid())
  productId    String
  filename     String
  filepath     String
  publicUrl    String
  altText      String?
  displayOrder Int      @default(0)
  isPrimary    Boolean  @default(false)
  createdAt    DateTime @default(now())
  product      Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ProductVariant {
  id              String   @id @default(uuid())
  productId       String
  size            String?
  color           String?
  stockQuantity   Int      @default(0)
  priceAdjustment Decimal? @db.Decimal(10, 2)
  sku             String   @unique
  product         Product  @relation(fields: [productId], references: [id])
}

model Category {
  id          String     @id @default(uuid())
  name        String
  slug        String     @unique
  parentId    String?
  description String?
  parent      Category?  @relation("CategoryToCategory", fields: [parentId], references: [id])
  children    Category[] @relation("CategoryToCategory")
  products    Product[]
}

model Brand {
  id          String    @id @default(uuid())
  name        String
  slug        String    @unique
  description String?
  products    Product[]
}
